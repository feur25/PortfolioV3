import i18next from 'i18next';
import { initReactI18next } from 'react-i18next';
import LanguageDetector from 'i18next-browser-languagedetector';
i18next
    .use(initReactI18next)
    .use(LanguageDetector)
    .init({
        fallbackLng : 'en',
        resources: {
            en : {
                translation : {
                    project : "Projects" ,
                    service : "Services",
                    blog : "Blogs",
                    about : "About",
                    contact : "Contact",
                    name : "Name",
                    contactMe : "If you want to contact me",
                    email : "Email",
                    submit : "Submit",
                    lore : "",
                    helysio : "Abandoned Minecraft Server",
                    engineer : "Video game where you play as a Robot, made on UE5",
                    toWait : "In Progress",
                    toComplete : "To Be Completed",
                    firstService : "Web Development: E-commerce / Showcase",
                    FfirstSlot : "Website mockup",
                    FsecondSlot : "Development of your choice, on the frameworks Angular, React, Laravel ...",
                    FthirdSlot : "Setting up the online server",
                    FfourthSlot : "Setting up databases (if requested)",
                    FfithSlot : "Admin Panel / Global vision of the site / Addition of new product",
                    secondService : "Java Plugin / Mods Minecraft",
                    SfirstSlot : "Plugin creation on request detailed",
                    SsecondSlot : "Mod creation, if 3D model provided beforehand",
                    SthirdSlot : "Creation of Data Packs",
                    SfourthSlot : "Setting up the server",
                    thirdService : "Video Games Learning Course",
                    TfirstSlot : "Unity Training : C#",
                    TsecondSlot : "Unreal Engine Training : C++ / .h / Blueprint",
                    TthirdSlot : "Learning how to make : UI / Widget",
                    TfourthSlot : "Game Optimization",
                    fourthService : "Initiation Web",
                    FOfirstSlot : "Web Learning",
                    FOsecondSlot : "CSS / SCSS / SASS",
                    FOthirdSlot : "Boostrap / Tailwind",
                    FOfourthSlot : "HTML / PUG",
                    FOfithSlot : "Javascript / Typescript / SQL / PHP",
                    fithService : "Software creation",
                    FIfirstSlot : "Choice of IOS or Android platform",
                    FIsecondSlot : "Choice of language if specified",
                    FIthirdSlot : "Type of software : Communication / Sales / Utility ...",
                    sixthService : "Specific language courses and learning",
                    SIfirstSlot : "Python / R / Java",
                    SIsecondSlot : "C / C++ / C#",
                    SIthirdSlot : "Golang",
                    SIfourthSlot : "JavaScript",
                    SIfithSlot : "Network and Infrastructure",
                    firsTitlelog : "AI Basics",
                    firstBlog : `Here, we are going to talk about the basics of AI and its two fundamental concepts that you might have heard of. I'm here to clearly explain what Deep Learning and Machine Learning mean, and what language is used and why. Machine Learning is a technique of Artificial Intelligence that enables a machine to learn and improve its performance in a specific task through experience. There are several types of Machine Learning, including Supervised, Unsupervised, and Reinforcement. Deep Learning is a subcategory of Machine Learning that uses artificial neural networks to learn complex data representation models. Neural networks are mathematical models that imitate the functioning of the human brain. The most widely used language for Machine Learning and Deep Learning is Python. This is due to its simplicity, flexibility, and the availability of a large number of libraries such as Scikit-learn, TensorFlow, and PyTorch. Deep Learning has revolutionized Artificial Intelligence by enabling the resolution of complex tasks such as image recognition, speech recognition, and automatic translation. Machine Learning, on the other hand, is used in many fields such as finance, healthcare, and marketing to predict outcomes or detect anomalies. In summary, Machine Learning and Deep Learning are Artificial Intelligence techniques that enable a machine to learn from data to solve specific tasks. The most widely used language to implement them is Python due to its simplicity and flexibility. These techniques have enabled the resolution of complex tasks and have many applications in many fields. You may be wondering, "Why Python?" This is a legitimate question, as Python is a long language compared to its siblings, and not all AIs are built on Python. However, there are four main reasons for this choice: 1) Simplicity: Python is an easy-to-learn and easy-to-use programming language, even for beginners. It is also more readable than other programming languages, making it easier to understand the code. 2) Flexibility: Python is a versatile programming language that allows for many different tasks. It is also compatible with many useful libraries and frameworks for Machine Learning and Deep Learning, such as Q-Learning, Keras, OpenCV, and many others. 3) Large Community: Python is supported by a large community of developers who are constantly creating new libraries and modules to help developers solve problems. This community is also very active and provides valuable support to developers who need help. 4) Good Performance: Python is an interpreted programming language, which may give the impression that it is slower than compiled languages. However, with the use of optimized libraries such as NumPy and Pandas, Python can be very fast and efficient for data processing. Due to these advantages, Python has become the preferred choice for many developers working in the field of Machine Learning and Deep Learning.`,
                    secondTitleBlog : "Golang Basics",
                    secondBlog : `Here is an article about the Golang language. No, it's not a course, even though I know many people would like to learn Golang. Although I know the basics, here we will ra-ther see why to use Golang, and especially what is it? Go, also known as Golang, is an open-source programming language designed by Google in 2007. It was created with the goal of combining the benefits of existing programming languages, such as the simplicity of Python's syntax and the speed of execution of C++. Since then, Go has become increasingly popular in the developer community for its simplicity and reliabil-ity. What is Go? Go is a compiled programming language characterized by its simple and easy-to-learn syntax. It is designed to be fast, efficient, and suitable for modern systems. Go is used in a variety of fields, including network programming, distributed systems, and development tools. Strengths of Go: 1) Simple and easy to learn: The simple and easy-to-learn syntax of Go makes it easy for new developers to understand the language, thereby reducing the time required to learn the language. 2) Perfor-mance: Go is very fast due to its static compilation and efficient garbage collector, mak-ing it an ideal choice for applications requiring high performance. 3) Concurrency: Go has native thread and concurrency management, allowing developers to create applica-tions that can simultaneously handle multiple tasks. 4) Open-source: Go is open-source, meaning that its source code is freely accessible and modifiable, encouraging collaboration and contribution from the developer community. 5) Security: Go is de-signed to minimize common programming errors that can lead to security issues, such as memory errors. How to get started with Go? If you are new to Go, it is recommend-ed to start by reading the official Go documentation, which is available for free on the Go website. There are also many online resources, such as tutorials and videos, that can help you learn the language. Once you have learned the basics of Go, you can down-load the Go compiler and start writing your own code. You can also join the Go com-munity online to ask questions and get help from other developers. In conclusion, Go is a modern, fast, safe, and easy-to-learn programming language. If you are looking for an efficient programming language for system programming, concurrency manage-ment, or software development, Go may be an excellent choice for you. Start exploring Go now and discover its benefits for your development project.`,
                    thirdTitleBlog : "Python Basics",
                    thirdBlog : `Oh, you are in my second favorite blog along with the one about AI. Alright, with-out further ado, let's begin: Python is one of the most widely used programming languages in the world, and this is particularly true in the field of Big Data. Indeed, Python offers numerous features that make it an ideal choice for the manipulation and analysis of large amounts of data. 1) Simple syntax: One of the main reasons Python is so popular is its simple and intuitive syntax. Reading and writing Python code is easier than with other languages, which means programmers can write code more quickly and efficiently. Python's simplicity is a significant advantage when it comes to working with large amounts of data, as it can make the process much easier to manage. 2) High-performance data libraries: Python has many high-performance data libraries that make it easy to manipulate massive amounts of data. Some of the most well-known libraries include NumPy, Pandas, and SciPy. These libraries offer advanced functions for manipulating data arrays, visualizing data, modeling, and simulation. NumPy, in particular, is a tool of choice for math-ematical and statistical operations on data. 3) Fast data processing: Python is a very fast language for data processing. Python's speed is enhanced by the fact that most data libraries are written in C language. This means that calculations per-formed by Python can be considerably accelerated, which is particularly important when working with large amounts of data. 4) A large community: Python is sup-ported by a large community of programmers who are constantly working to improve the language. Regular updates to Python mean that data libraries are also updated, ensuring that users always have access to the latest features and improvements. In addition to its advantages for data processing, Python is also an ideal choice for creating dynamic websites with Django. Django is a web framework written in Python that allows for the quick and easy creation of web-sites. Django provides features for database management, security, user man-agement, and much more. With Django, developers can create high-performance and secure websites, making it an ideal tool for businesses looking to create professional websites. In conclusion, Python is an obvious choice for companies looking to work with large amounts of data. Its high-performance data libraries, simple syntax, and large community make it an ideal choice for Big Data. And with Django, Python also offers an easy way to create dynamic and high-performance websites. If you work in the field of Big Data or website creation, Python is a tool you absolutely must have in your toolkit.`,
                    fourthTitleBlog : "Web Basics",
                    fourthBlog : `This blog will be dedicated, like all the others, to beginners, in order to maybe help you better understand certain notions, trying to be as clear as possible. We won't go into the variations that HTML or CSS can have, but really focus on the most basic notions. What is HTML? HTML is the body of the page, what the page contains, for example: text, a button, images, etc. To illustrate and better understand, for example, the text you are currently reading is in what is called an HTML tag. In fact, everything you see is in one way or another in an HTML tag, even this page's logo. So to keep it simple, a tag allows you to specify the type that will be displayed, for example: <img src="where_your_image_is.extension"/>, here we can see that there is a tag, the "img" tag, which will tell us that we are going to insert an image in our HTML. We will also have the notion of a closing tag, which is very important since it allows you to say when a text or a title will end (these are examples of the most common, there are many others, for example, for an image, since you insert only one image per tag, you don't have to close the tag, although it's preferable). They are recognized particularly via the slash on your keyboard: "</name_of_the_tag>". For example, for a paragraph, we will have <p>This is the content of my paragraph that will be displayed on my HTML page</p>. Now that you understand this notion, we can move on to another one that you may have seen or heard of in some way: "CSS". What is CSS? First of all, know that CSS and HTML are intimately linked. HTML is independent, whereas CSS depends on HTML. In short, it's useless to create a CSS file if you don't link it to HTML. But even if HTML can live without incorporating CSS or linking a CSS file to HTML, CSS allows for layout, such as colors or the position of paragraphs, for example, on your page... A pure HTML page would be quite dull without the help of CSS, so it's important to know these two very different languages. If you are a beginner and want to learn CSS, I highly recommend W3SCHOOL, which teaches you to respect W3C standards, which are the rules that Google's robot, or others, will check on your web page to make it stand out more than another page. So it's very important to respect these standards for referencing and to have more visibility on the web, which is a bottomless pit. There are also completely free applications to train you and learn the basics, like learning different languages with Duolingo. You have Mimo Coding to really learn the basics of HTML and CSS, and you also have other languages on it, like JavaScript or Python. That's the end of this blog, I'm trying to be as clear and understandable as possible for those who would like to get into it.`,
                    fithTitleBlog : "Linux Basics",
                    fithBlog : `You are now reading an article about Linux. I am not a Unix OS user myself, as I used to be a gamer before becoming interested in development. But over the years, I have had the opportunity to work with MacOS and Linux, so I can share with you my feelings and the five major axes or strengths that I have found in Linux during my work. So, what is Linux? Linux is an open-source operating system that was originally developed by Linus Torvalds in 1991. It is now one of the most popular operating systems, used in many domains, including web servers, supercomputers, personal computers, and even mobile phones. What is Linux? Linux is an operating system that runs on computers and servers, similar to Windows or Mac OS X. However, the main difference with these two operating systems is that Linux is open-source, meaning that its source code is freely available and can be modified and distributed freely. Why choose Linux? There are many reasons why people choose to use Linux: 1) Security: Linux is considered one of the most secure operating systems, as it is less likely to be affected by viruses, malware, or hacks. 2) Cost: Linux is free, making it an economic choice for businesses and individuals. 3) Customization: Linux is highly customizable, meaning that you can configure it exactly as you wish. 4) Stability: Linux is known to be very stable and reliable, making it a popular choice for web servers and supercomputers. 5) Community: Linux has a very active and passionate community that is constantly working on improving and innovating the operating system. How to get started with Linux? If you are new to Linux, there are many different distributions (versions) available, each with its own features and functionalities. Some of the most popular distributions are Ubuntu, Debian, Fedora, Red Hat, and Linux Mint. Once you have chosen a distribution, you can download it for free from the project's website. You can then burn the ISO image to a bootable CD or USB key and install it on your computer. Conclusion Linux is a popular open-source operating system that offers many advantages, such as security, customization, stability, and an active community. If you are interested in learning more about Linux, you can download a distribution and start exploring it now.`,
                    sixthTitleBlog : "Java Basics",
                    sixthBlog : `You are now in the blog dedicated to Java because, although I love Python, Java is also a big favorite of mine, so it's important for me to talk about it and tell you what possi-bilities Java offers. Java is one of the most widely used programming languages in the world. It is used to create a wide variety of applications and games, from mobile appli-cations to online games to desktop software. In this article, we will focus on the basics of Java and the types of applications or games it can be used to design. 1) Basics of Ja-va: Java is an object-oriented programming language, which means that programs are created using objects and classes. Objects are instances of classes, and classes are blueprints for creating objects. Java programs are executed on the Java Virtual Machine (JVM), which allows programs to run on different platforms. Java syntax is similar to that of C++, but it is easier to use. 2) Types of applications that can be designed with Java: Java is often used to create enterprise applications, mobile applications, desktop software, and online games. Enterprise applications are applications that are used to manage the business operations of a company, such as supply chain management, ac-counting, and human resources. Mobile applications are applications designed to be used on mobile devices such as smartphones and tablets. Desktop software is software designed to run on desktop and laptop computers. Online games are games designed to be played over the internet, such as massively multiplayer online role-playing games (MMORPGs) or real-time strategy games (RTSs). 3) Types of games that can be de-signed with Java: Java is a popular choice for creating online games because of its port-ability and flexibility. Online games created with Java often include card games, casino games, and strategy games. Card games include games such as online poker and blackjack. Casino games include games such as online slot machines and roulette. Strategy games include games such as Starcraft and Age of Empires. You can also find the creation of Minecraft mods or plugins via Java Plugin, but that's another story. In conclusion, Java is a very popular and versatile programming language that can be used to create a wide variety of applications and games. Its simple syntax and portabil-ity make it an ideal choice for developers looking to create cross-platform applications. And because of its popularity, there is a large community of Java developers who are constantly working to improve and expand the language's features. If you are looking to get into programming, Java is a language you should definitely consider.`,
                    seventhTitleBlog : "IDE and Utility",
                    seventhBlog : `Welcome to the blog about IDE and utilities that I can offer you during your reading. First of all, I would like to remind you in my own words what an IDE is, so that we all agree and at the end, we can see which IDE is most appropriate for what you do. An IDE, or Integrated Development Environment, is a software that facilitates the software development process by bringing together several useful tools in one place. IDEs are often used by programmers to write, test, and debug computer code. Typically, an IDE includes a code editor, which is used to write the source code, as well as compilation tools, which are used to convert the source code into executable code. The IDE may also include features such as syntax highlighting, which distinguishes the different elements of the code using different colors, as well as debugging tools, which help programmers find and correct errors in their code. In summary, an IDE is software that offers programmers a complete working environment for software development, providing them with tools such as a code editor, compilation and debugging tools to simplify the software development process. Now that you understand what an IDE is, we can move on to the tools that I use and strongly recommend for any new or experienced developer. First, before choosing which IDE to select, you will need to consider what you want to do with the code and what language you will use. For example, if you simply use a well-known language like Python, you will have the basic IDLE IDE for Python with the corresponding version, but that's not very clean. What we want is a work environment where we can add new tools, such as an AI that allows us to code a little faster or perhaps put the code in different colors that we have chosen ourselves. For Python and most other languages, I strongly recommend downloading Jetbrains Toolbox, where you can find various IDEs for a particular language such as PyCharm for PYTHON or IntelliJ IDEA for JAVA, which I strongly recommend, by the way, if you are on one of these two languages, the faster you learn to handle these IDEs, the faster it will allow you to be faster in your own code (take the community version if you are not in a company, they are usually sufficient and especially free). Next, we have another IDE that is known to every developer, which is Visual Studio for companies, and for the community version, we have Visual Studio Code. Personally, I prefer Visual Studio Code even though I have Visual Studio, but in fact, it's more than Visual Studio Code that I started with and that I have become more accustomed to using, even though Visual Studio will be better, so if you are in a company, I strongly recommend it. However, it also depends on the budget level because you have to pay a license for Visual Studio whereas Visual Studio Code does not require one. But like these other IDEs, you can install extensions, and this brings us to a utility point, which may make you want to go to this IDE. Personally, I use it for the web, for example, when I use the REACT or Angular framework, I also code in C++ and this C# with this IDE. Well, we come to the moment of which utility to install on your IDE. First of all, the first one I recommend if you work in a team is to install the "Live Share" extension, which is excellent for teamwork if you have a good reason, you can open your ports to your friends or colleagues if you are working on a database so that they can access and modify your database without being on the same device or server, as your PC will simply turn into a server via Live Share, and it will allow your colleagues to code in real-time on your project. So for this one, I'll be quick since it won't interest everyone. If you don't have Wamp Server or its alternatives on Linux or Mac OS, depending on which ISO you're working on or if you don't have a server available to put your web page online, or at least a test server, you can use "Live Server" web extension with Apache or Ngnix, whichever you prefer, as your server. Don't hesitate to also install an extension to color your code and make it more readable. There are several available, so choose the one you prefer. We now come to a part that could interest many people, which are the AI tools that can help you code maybe a little faster or suggest solutions that could correspond to your current problem. You can use "BlackBox", "OpenAI Codex", or "Github Copilote". For Linux lovers who want to move to Windows for some obscure reason, I recommend installing the WSL extension, which allows you to integrate the Linux environment into your code editor, meaning you can use Linux development tools directly from Visual Studio Code. The WSL extension for Visual Studio Code offers features such as running Linux commands directly from the code editor, supporting syntax highlighting for Linux files, and supporting access to files located in the Linux environment. In summary, if you're using the WSL environment on your Windows computer and also using Visual Studio Code for your development, the WSL extension can be very useful in allowing you to work more easily with Linux development tools.`,
                    notFound : "Sorry the page is not found",
                    leaves : "Leave",
                }
            },
            fr : {
                translation : {
                    project : "Projets",
                    service : "Services",
                    blog : "Articles",
                    about : "À Propos",
                    contact : "Me Contacter",
                    name : "Nom",
                    contactMe : "Si vous souhaitez me contacter",
                    email : "Adress mail électronique",
                    submit : "Envoyez",
                    lore : "Bachelor 2 Chez Ynov a Aix-En-Provence. Je suis motivé et je souhaite devenire data scientist",
                    helysio : "Serveur Minecraft Abandonnée",
                    engineer : "Jeu vidéo ou vous incarnerais un Robot, fait sur UE5",
                    toWait : "En Cours",
                    toComplete : "À Compléter",
                    firstService : "Développement Web : E-commerce / Vitrine",
                    FfirstSlot : "Maquette du site web",
                    FsecondSlot : "Développement aux choix, sur les framework Angular, React, Laravel ...",
                    FthirdSlot : "Mise en place du serveur en Ligne",
                    FfourthSlot : "Mise en place de BDD (si demandés)",
                    FfithSlot : "Panel Administrateur / vision Global du site / Ajout de nouveau produit",
                    secondService : "Java Plugin / Mods Minecraft",
                    SfirstSlot : "Création de Plugin sur demande détaillé",
                    SsecondSlot : "Création de Mod, si Modèle 3D fournis au préalable",
                    SthirdSlot : "Création de DataPack",
                    SfourthSlot : "Mise en place du serveur",
                    thirdService : "Cours Apprentissage aux Jeux Vidéos",
                    TfirstSlot : "Fomation Unity : C#",
                    TsecondSlot : "Formation Unreal Engine : C++ / .h / Blueprint",
                    TthirdSlot : "Apprentissage de comment faire : UI / Widget",
                    TfourthSlot : "Optimisation du Jeu",
                    fourthService : "Initiation Web",
                    FOfirstSlot : "Apprentissage Web",
                    FOsecondSlot : "CSS / SCSS / SASS",
                    FOthirdSlot : "Boostrap / Tailwind",
                    FOfourthSlot : "HTML / PUG",
                    FOfithSlot : "Javascript / Typescript / SQL / PHP",
                    fithService : "Création de logiciels",
                    FIfirstSlot : "Choix de la plateforme IOS ou Android",
                    FIsecondSlot : "Choix du langage si préciser",
                    FIthirdSlot : "Type de logiciel : Communication / Vente / Utilitaire ...",
                    sixthService : "Cours et Apprentissage de langage spécifique",
                    SIfirstSlot : "Python / R / Java",
                    SIsecondSlot : "C / C++ / C#",
                    SIthirdSlot : "Golang",
                    SIfourthSlot : "JavaScript",
                    SIfithSlot : "Réseau et Infrastructure",
                    firsTitlelog : "Les Bases de L'IA",
                    firstBlog : `Ici Nous allons parler des bases de l’IA et de ces deux concept primordiaux que vous avez surement du entendre, je suis la pour vous expliquer clairement que signifie le Deep Learning et le Machine Learning, et quelle langage utilisé et pourquoi ? Le Machine Learning est une technique de l'Intelligence Artificielle qui permet à une machine d'apprendre et d'améliorer sa performance dans une tâche spécifique à travers l'expérience. Il existe plusieurs types de Machine Learning, notamment le Supervisé, le Non Supervisé et le Renforcement. Le Deep Learning est une sous-catégorie du Machine Learning qui utilise des réseaux de neurones artificiels pour apprendre des modèles de représentation des données complexes. Les réseaux de neurones sont des modèles mathématiques qui imitent le fonctionnement du cerveau humain. Le langage le plus utilisé pour le Machine Learning et le Deep Learning est Python. Cela est dû à sa simplicité, sa flexibilité et à la disponibilité d'un grand nombre de bibliothèques telles que Scikit-learn, TensorFlow et PyTorch. Le Deep Learning a révolutionné l'Intelligence Artificielle en permettant de résoudre des tâches complexes telles que la reconnaissance d'images, la reconnaissance vocale et la traduction automatique. Le Machine Learning, quant à lui, est utilisé dans de nombreux domaines tels que la finance, la santé et le marketing pour prédire des résultats ou détecter des anomalies. En résumé, le Machine Learning et le Deep Learning sont des techniques d'Intelligence Artificielle qui permettent à une machine d'apprendre à partir de données pour résoudre des tâches spécifiques. Le langage le plus utilisé pour les implémenter est Python en raison de sa simplicité et de sa flexibilité. Ces techniques ont permis de résoudre des tâches complexes et ont de nombreuses applications dans de nombreux domaines. Mais du coup vous devez surement vous posez la question mais pourquoi Python ? et c’est une question légitime, car python et très long contrairement a ses frères et sœurs, de plus les IA ne sont pas tous conçus sur Python, mais il y a 4 grandes raisons à ce choix. 1) Simplicité : Python est un langage de programmation facile à apprendre et à utiliser, même pour les débutants. Il est également plus lisible que d'autres langages de programmation, ce qui facilite la compréhension du code. 2) Flexibilité : Python est un langage de programmation polyvalent qui permet de réaliser de nombreuses tâches différentes. Il est également compatible avec de nombreuses bibliothèques et frameworks utiles pour le Machine Learning et le Deep Learning, tels que Q-Learning, Keras, OpenCV, et bien d'autres encore. 3) Une Large communauté : Python est soutenu par une grande communauté de développeurs qui créent constamment de nouvelles bibliothèques et modules pour aider les développeurs à résoudre des problèmes. Cette communauté est également très active et offre un soutien précieux aux développeurs qui ont besoin d'aide. 4) Bonnes performances : Python est un langage de programmation interprété, ce qui peut donner l'impression qu'il est plus lent que les langages compilés. Cependant, avec l'utilisation de bibliothèques optimisées telles que NumPy et Pandas, Python peut être très rapide et efficace pour le traitement de données. En raison de ces avantages, Python est devenu le choix privilégié pour de nombreux développeurs travaillant dans le domaine du Machine Learning et du Deep Learning.`,
                    secondTitleBlog : "Les Bases du Golang",
                    secondBlog : `Voici un article parlant du langage Golang, alors non ce n’est pas un cours, malgré le fait que je sais que beaucoup aimerais apprendre le Golang, même si j’en connais les fondamentaux, ici nous allons plutôt voire pourquoi utiliser Golang, et surtout bas qu’es que c’est ? Go, également connu sous le nom de Golang, est un langage de pro-grammation open-source conçu par Google en 2007. Il a été créé dans le but de com-biner les avantages des langages de programmation existants, tels que la simplicité de la syntaxe de Python et la vitesse d'exécution de C++. Depuis lors, Go est devenu de plus en plus populaire dans la communauté des développeurs pour sa simplicité et sa fiabilité. Qu'est-ce que Go ? Go est un langage de programmation compilé, qui se ca-ractérise par sa syntaxe simple et facile à apprendre. Il est conçu pour être rapide, effi-cace et adapté aux systèmes modernes. Go est utilisé dans une variété de domaines, y compris la programmation réseau, les systèmes distribués et les outils de développe-ment. Points forts de Go : 1) Simple et facile à apprendre : La syntaxe simple et facile à apprendre de Go facilite la compréhension du langage pour les nouveaux dévelop-peurs, réduisant ainsi le temps nécessaire pour apprendre le langage.  2) Performant : Go est très rapide grâce à sa compilation statique et à son garbage collector efficace, ce qui en fait un choix idéal pour les applications nécessitant une haute performance. 3) Concurrency : Go dispose d'une gestion native des threads et de la concurrence, ce qui permet aux développeurs de créer des applications qui peuvent gérer simultanément plusieurs tâches. 4) Open-source : Go est open-source, ce qui signifie que son code source est librement accessible et modifiable, ce qui encourage la collaboration et la contribution de la communauté des développeurs. 5) Sécurité : Go est conçu pour mi-nimiser les erreurs de programmation courantes qui peuvent entraîner des problèmes de sécurité, tels que les erreurs de mémoire. Comment commencer avec Go ? Si vous êtes nouveau sur Go, il est recommandé de commencer par lire la documentation offi-cielle de Go, qui est disponible gratuitement sur le site Web de Go. Il existe également de nombreuses ressources en ligne, telles que des tutoriels et des vidéos, qui peuvent vous aider à apprendre le langage. Une fois que vous avez appris les bases de Go, vous pouvez télécharger le compilateur Go et commencer à écrire votre propre code. Vous pouvez également rejoindre la communauté Go en ligne pour poser des questions et obtenir de l'aide des autres développeurs. En conclusion Go est un langage de pro-grammation moderne, rapide, sûr et facile à apprendre. Si vous cherchez un langage de programmation efficace pour la programmation système, la gestion de la concurrence ou le développement de logiciels, Go peut être un excellent choix pour vous. Commen-cez dès maintenant à explorer Go et à découvrir ses avantages pour votre projet de dé-veloppement.`,
                    thirdTitleBlog : "Les Bases du Python",
                    thirdBlog : `Ah tu es dans mon deuxième blog préférer avec le blog traitant des IA. Très bien sans plus attendre commençons : Python est l'un des langages de programmation les plus utilisés dans le monde, et cela est particulièrement vrai dans le domaine du Big Data. En effet, Python offre de nombreuses fonctionnalités qui en font un choix idéal pour la manipulation et l'analyse de grandes quantités de données. 1) Une syntaxe simple : L'une des principales raisons pour lesquelles Python est si populaire est sa syntaxe simple et intuitive. La lecture et l'écriture du code Python sont plus faciles que celles des autres langages, ce qui signifie que les programmeurs peuvent écrire du code plus rapidement et de manière plus efficace. La simplicité de Python est un avantage impor-tant lorsqu'il s'agit de travailler avec de grandes quantités de données, car cela peut rendre le processus beaucoup plus facile à gérer. 2) Des bibliothèques de données per-formantes : Python dispose de nombreuses bibliothèques de données performantes qui permettent de manipuler facilement des données massives. Parmi les bibliothèques les plus connues, on peut citer NumPy, Pandas et SciPy. Ces bibliothèques offrent des fonctions avancées pour la manipulation de tableaux de données, la visualisation de données, la modélisation et la simulation. NumPy, en particulier, est un outil de choix pour les opérations mathématiques et statistiques sur les données. 3) Un traitement rapide de données : Python est un langage très rapide pour le traitement de données. La vitesse de Python est renforcée par le fait que la plupart des bibliothèques de don-nées sont écrites en langage C. Cela signifie que les calculs effectués par Python peu-vent être considérablement accélérés, ce qui est particulièrement important lorsqu'il s'agit de travailler avec de grandes quantités de données. 4) Une grande communauté : Python est soutenu par une grande communauté de programmeurs qui travaillent constamment pour améliorer le langage. Les mises à jour régulières de Python signi-fient que les bibliothèques de données sont également mises à jour, ce qui garantit que les utilisateurs ont toujours accès aux dernières fonctionnalités et améliorations. En plus de ses avantages pour le traitement des données, Python est également un choix idéal pour la création de sites web dynamiques grâce à Django. Django est un frame-work web écrit en Python, qui permet de créer des sites web rapidement et facilement. Django fournit des fonctionnalités pour la gestion de la base de données, la sécurité, la gestion des utilisateurs, et bien plus encore. Grâce à Django, les développeurs peuvent créer des sites web performants et sécurisés, ce qui en fait un outil idéal pour les entre-prises qui cherchent à créer des sites web professionnels. En conclusion, Python est un choix évident pour les entreprises qui cherchent à travailler avec de grandes quantités de données. Ses bibliothèques de données performantes, sa syntaxe simple et sa grande communauté en font un choix idéal pour le Big Data. Et avec Django, Python offre également un moyen facile de créer des sites web dynamiques et performants. Si vous travaillez dans le domaine du Big Data ou de la création de sites web, Python est un outil que vous devez absolument avoir dans votre boîte à outils.`,
                    fourthTitleBlog : "Les Bases du Web",
                    fourthBlog : `Ce blog sera dédié, au débutant comme tous les autres d’ailleurs, pour vous permettre peut-être de mieux comprendre certaine notion, en essayant d’être le plus clair possible, nous ne rentrerons pas dans les variante que peut avoir le HTML ou le CSS, mais vraiment sur les notion les plus basics. Le Html qu’es que c’est ? Le HTML est le corp de la page ce que contient la page, exemple : du texte un bouton, des images, … Pour illustré, et mieux comprendre, par exemple le texte que vous lisez actuellement ce trouve dans ce que l’on appelle une balise HTML, d’ailleurs tous ce que vous voyez ce trouve d’une manière ou d’une autre dans un balise HTML même le logo de cette page. Donc pour faire simple, une balise permet de préciser le type qui va s’afficher exemple : <img src= « ou_se_trouve_votre_image.extension » />,ici  nous pouvons constater qu’il y a une balise, la balise : « img » qui va nous préciser que nous allons insérer une image dans notre HTML, nous aurons aussi la notion de balise fermante qui est très important vue quelle permet de dire quand va s’arrêter un texte, ou un titre (ceci sont des exemples, les plus courant, il y en a bien d’autre, par exemple pour une image vue que vous insérer qu’une seul image par balise, vous n’êtes pas obliger de fermer la balise même si c’est préférable.). On les reconnait notamment via le slash de votre clavier : « </nom_de_la_balise>. Exemple pour un paragraphe on auras <p>Ceci es le contenue de mon paragraphe qui va s’afficher sur ma page HTML</p>. Très bien une fois que vous avez compris cette notion, du coup pour les non-initiés, de ce qu’es un fichier HTML. Nous allons pouvoir voir une autre notion, vous aurez peut-être vue ou entendue d’une quel qu’onques manière le terme « CSS ». Le CSS qu’es que c’est ? Tout d’abord sachez que le CSS et le HTML sont intimement lié, le HTML es indépendant, alors que le CSS dépend du HTML, en somme il ne sert a rien de crée un fichier CSS, si vous ne le liez pas a du HTML. Mais même si le HTML peut vivre sans incorporer du CSS, ou le lié un fichier CSS au HTML, le CSS permet la mise en page dont les couleurs, ou encore la position des paragraphes, par exemple sur votre page, ... Une page HTML pure serait bien fade sans l’aide du CSS, donc il est important de connaitre c’est deux langage très différent l’un de l’autre. Un conseil si vous êtes novice et souhaiter vous lancer dans l’apprentissage du CSS je vous recommande vivement W3SCHOOL, qui vous apprend a respecter les normes W3C, qui sont les règles que le robot google, ou autres vérifiera sur votre page web, pour la mettre plus en valeur qu’une autre page. Donc il est très important de respecter c’est norme pour le référencement, et pour avoir plus de visibilité sur le web, qui es un gouffre sans fond.  Il existe aussi des applications totalement gratuit pour vous former, et apprendre les bases a l’instar de l’apprentissage de diverse langage avec Duolingo, vous avez Mimo Codage, pour apprendre vraiment les bases du HTML et CSS, vous avez aussi d’autres langages dessus comme le Javascript, ou bien du Python. Voilà ce qui termine ce blog, j’essaie d’être le plus clair possible et compréhensible pour ceux qui aimerait ce lancer dedans.`,
                    fithTitleBlog : "Les Bases de Linux",
                    fithBlog : "Vous voici sur l’article qui va traiter de linux, alors je ne suis un pas une personne qui est sur un OS Unix, car avant d’être intéresser par le développement j’étais un joueur, petit joueur mais joueur quand même. Mais au fur et à mesure des années j’ai eu la possibilité de travailler sur MacOs et Linux, donc je vais pouvoir vous partager mon ressentie et les 5 Grand axes ou points fort que j’ai trouvé à Linux, au cours de mon travail. Mais alors Linux qu’es que c’est ? Linux est un système d'exploitation open-source qui a été initialement développé par Linus Torvalds en 1991. Il est aujourd'hui l'un des systèmes d'exploitation les plus populaires, utilisé dans de nombreux do-maines, y compris les serveurs web, les supercalculateurs, les ordinateurs personnels et même les téléphones mobiles. Qu'est-ce que Linux ? Linux est un système d'exploita-tion qui fonctionne sur les ordinateurs et les serveurs, similaire à Windows ou Mac OS X. Cependant, la principale différence avec ces deux systèmes d'exploitation est que Linux est open-source, ce qui signifie que son code source est disponible gratuitement et peut être modifié et distribué librement. Pourquoi aller sur Linux ? Il existe de nom-breuses raisons pour lesquelles les gens choisissent d'utiliser Linux : 1) Sécurité : Linux est considéré comme l'un des systèmes d'exploitation les plus sécurisés, car il est moins susceptible d'être victime de virus, de logiciels malveillants ou de piratages. 2) Coût : Linux est gratuit, ce qui en fait un choix économique pour les entreprises et les particuliers. 3) Personnalisation : Linux est très personnalisable, ce qui signifie que vous pouvez le configurer exactement comme vous le souhaitez. 4) Stabilité : Linux est con-nu pour être très stable et fiable, ce qui en fait un choix populaire pour les serveurs web et les supercalculateurs. 5) Communauté : Linux a une communauté très active et pas-sionnée qui travaille constamment à l'amélioration et à l'innovation du système d'ex-ploitation. Comment commencer avec Linux ? Si vous êtes nouveau sur Linux, il existe de nombreuses distributions (versions) différentes disponibles, chacune avec ses propres caractéristiques et fonctionnalités. Certaines des distributions les plus popu-laires sont Ubuntu, Debian, Fedora, Red Hat et Linux Mint. Une fois que vous avez choi-si une distribution, vous pouvez la télécharger gratuitement à partir du site Web du projet. Vous pouvez alors graver l'image ISO sur un CD ou une clé USB amorçable et l'installer sur votre ordinateur. Conclusion Linux est un système d'exploitation open-source populaire qui offre de nombreux avantages, tels que la sécurité, la personnalisa-tion, la stabilité et une communauté active. Si vous êtes intéressé à en savoir plus sur Linux, vous pouvez télécharger une distribution et commencer à l'explorer dès mainte-nant.",
                    sixthTitleBlog : "Les Bases de Java",
                    sixthBlog : `Vous voici dans le blog dédié a Java, car certes j’aime Python mais Java et un gros coup de cœur aussi, donc il est important pour moi d’en parler, et vous dire quelles possibili-tés vous offre Java. Java est l'un des langages de programmation les plus utilisés au monde. Il est utilisé pour créer une grande variété d'applications et de jeux, allant des applications mobiles aux jeux en ligne en passant par les logiciels de bureau. Dans cet article, nous allons nous concentrer sur les bases de Java et les types d'applications ou de jeux qu'il peut être utilisé pour concevoir. 1) Les bases de Java : Java est un langage de programmation orienté objet, ce qui signifie que les programmes sont créés en utili-sant des objets et des classes. Les objets sont des instances de classes, et les classes sont des plans pour la création d'objets. Les programmes Java sont exécutés sur la ma-chine virtuelle Java (JVM), ce qui permet aux programmes de fonctionner sur diffé-rentes plates-formes. La syntaxe de Java est similaire à celle de C++, mais elle est plus simple à utiliser. 2) Les types d'applications que l'on peut concevoir avec Java : Java est souvent utilisé pour créer des applications d'entreprise, des applications mobiles, des logiciels de bureau et des jeux en ligne. Les applications d'entreprise sont des applica-tions qui sont utilisées pour gérer les opérations commerciales d'une entreprise, comme la gestion de la chaîne d'approvisionnement, la comptabilité et les ressources humaines. Les applications mobiles sont des applications conçues pour être utilisées sur des appareils mobiles comme les smartphones et les tablettes. Les logiciels de bu-reau sont des applications conçues pour être exécutées sur des ordinateurs de bureau et portables. Les jeux en ligne sont des jeux conçus pour être joués sur Internet, tels que les jeux de rôle en ligne massivement multijoueurs (MMORPG) ou les jeux de stratégie en temps réel (RTS). 3) Les types de jeux que l'on peut concevoir avec Java : Java est un choix populaire pour la création de jeux en ligne en raison de sa portabilité et de sa flexibilité. Les jeux en ligne créés avec Java incluent souvent des jeux de cartes, des jeux de casino et des jeux de stratégie. Les jeux de cartes incluent des jeux tels que le poker en ligne et le blackjack. Les jeux de casino incluent des jeux tels que les machines à sous en ligne et la roulette. Les jeux de stratégie incluent des jeux tels que Starcraft et Age of Empires. Vous pourrez aussi retrouver la création de Mod ou bien de Plugin Minecraft via Java Plugin mais ça c’est encore une autre histoire. En conclusion, Java est un lan-gage de programmation très populaire et polyvalent qui peut être utilisé pour créer une grande variété d'applications et de jeux. Sa syntaxe simple et sa portabilité en font un choix idéal pour les développeurs qui cherchent à créer des applications multi-plateformes. Et en raison de sa popularité, il existe une grande communauté de déve-loppeurs Java qui travaillent constamment à améliorer et à étendre les fonctionnalités du langage. Si vous cherchez à vous lancer dans la programmation, Java est un langage que vous devriez certainement envisager.`,
                    seventhTitleBlog : "IDE et Utilitaire",
                    seventhBlog : `Vous voici sur le Blog traitent des IDE et des utilitaires, que je peut vous apporter au cours de votre lecture. Tout d’abord j’aimerais bien vous rappeler avec mes propres termes qu’es qu’un IDE, pour que l’ont soit tous d’accord et pouvoir a la fin, voir quel IDE vous serez le plus approprié en fonction de ce que vous faites. Un IDE, ou environnement de développement intégré (en anglais, Integrated Development Environment), est un logiciel qui facilite le processus de développement de logiciels en regroupant plusieurs outils utiles en un seul endroit. Les IDE sont souvent utilisés par les programmeurs pour écrire, tester et déboguer du code informatique. Typiquement, un IDE comprend un éditeur de code, qui est utilisé pour écrire le code source, ainsi que des outils de compilation, qui sont utilisés pour convertir le code source en code exécutable. L'IDE peut également inclure des fonctionnalités telles que la coloration syntaxique, qui permet de distinguer les différents éléments du code en utilisant des couleurs différentes, ainsi que des outils de débogage, qui aident les programmeurs à trouver et à corriger les erreurs dans leur code. En résumé, un IDE est un logiciel qui offre aux programmeurs un environnement de travail complet pour le développement de logiciels, en leur fournissant des outils tels qu'un éditeur de code, des outils de compilation et de débogage, afin de simplifier le processus de développement de logiciels. Maintenant que vous avez compris ce qu'est IDE, on va pouvoir passer aux outils que moi je t'utilise, et que je recommande fortement pour tout nouveau développeur ou développeur aguerri bien évidemment. Tout d'abord avant de choisir quel IDE sélectionner. Il faudra vous pencher sur la question qu'est-ce que vous souhaitez faire avec le code et quelle langage vous allez utiliser. En effet si vous faites tout simplement un langage connu comme le python, vous aurez l'ide de base qui est IDLE de python avec la version qui lui correspond, mais c'est pas très propre nous ce que l'on veut c'est un environnement de travail où on peut ajouter de nouveaux outils par exemple une IA qui nous permet de coder un peu plus vite ou peut-être mettre le code dans différentes couleurs que nous aurons choisies nous-mêmes. pour python et la plupart des autres langages je vous recommande fortement de télécharger Jetbrains Toolbox, ou vous pourrez retrouver diverses IDE destinées a un langage en particulier comme PyCharm pour PYTHON, ou bien IntelliJ IDEA pour JAVA, que je recommande fortement d’ailleurs si vous êtes sur l’un de ces deux langage plus vite vous apprendrez a manier c’est IDE, plus vite cela vous permettra d’être plus rapide dans votre propre code (prenez les communautaire si vous n’êtes pas en entreprise, ils ont bien suffisant dans la plus part des cas et surtout gratuit). Après nous avons un autre IDE qui est de base connue de tout développeur c'est Visual Studio pour les entreprises, et pour la version  communautaire Visual Studio code, personnellement je préfère Visual Studio code même si j'ai Visual Studio mais en fait c'est plus que Visual Studio code j'ai commencé avec et que j'ai pris plus l'habitude de l'utiliser même si Visual Studio sera mieux donc si vous êtes en entreprise je vous le conseille fortement, après tout dépend aussi du niveau de budget parce qu'il faut payer une licence pour Visual Studio alors que Visual Studio code non. Mais comme ces autres confrères vous pourrez installer des extensions, et là on arrive à un point le point utilitaire celui qui va vous donner envie peut-être d'aller sur cette IDE, personnellement j'utilise pour le web par exemple quand j'utilise le framework REACT ou Angular, h je code aussi en C++ et cette C# avec cette IDE. très bien on arrive au moment quel utilitaire installé sur son IDE, tout Premièrement le premier que je conseille si vous travaillez en équipe, installer l'extension « Live Share », excellent pour le travail d'équipe enfin si vous avez une bonne cause bien évidemment, vous pourrez ouvrir vos ports à vos amis ou vos collègues si vous êtes en train de réaliser une base de données pour qu'ils arrivent à accéder à votre base de données et la modifier sans être sur le même appareil ou le même serveur car votre PC se transformera tout simplement en serveur via Live Share, et surtout ça permettra à vos collègues de coder en temps réel sur votre projet. Alors pour celui-là je vais être rapide car il ne va pas intéresser tout le monde, une extension web si vous ne possédez pas wamp Server ou alors ces alternatives sur Linux ou Mac OS tout dépend où vous travaillez sur quelle ISO, ou alors que vous n'avez vraiment pas de serveur à disposition pour mettre en ligne votre page web, ou en tout cas un serveur de test, avec Apache ou bien Ngnix comme vous voulez c’est « Live Server ». N’hésitez pas a installer aussi une extensions pour mettre en couleurs votre code, pour le rendre plus lisible il en existe plusieurs, donc je vous laisse choisir celui que vous préférez. Nous arrivons à une partie qui est pourrait intéressée plusieurs personnes ce sont les IA qui vont vous permettre de coder peut-être un peu plus rapidement ou vous proposez surtout des solutions qui pourraient correspondre à votre problème actuel. Vous aurez donc soit « BlackBox », ou bien « OpenAI Codex » ou encore « Github Copilote ». Pour les amoureux de Linux qui souhaite ce dirigez vers Windows pour une raisons obscure, je vous conseil d’installer l’extensions WSL qui permet d'intégrer l'environnement Linux dans l'éditeur de code, ce qui signifie que vous pouvez utiliser des outils de développement Linux directement depuis Visual Studio Code. L'extension WSL pour Visual Studio Code offre des fonctionnalités telles que l'exécution de commandes Linux directement depuis l'éditeur de code, la prise en charge de la coloration syntaxique pour les fichiers Linux, et la prise en charge de l'accès aux fichiers situés dans l'environnement Linux. En résumé, si vous utilisez l'environnement WSL sur votre ordinateur Windows et que vous utilisez également Visual Studio Code pour votre développement, l'extension WSL peut être très utile pour vous permettre de travailler plus facilement avec les outils de développement Linux.`,
                    notFound : "Navré la page n'a pas était trouvé",
                    leaves : "Quitter",
                }
            }
        }
    })